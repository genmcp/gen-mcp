$ examples/netedge-tools/netedge-break-repair.sh --scenario=2 --setup
scenario 2: Route host without DNS
applying deployment, service and route in test-ingress
deployment.apps/hello unchanged
service/hello unchanged
route.route.openshift.io/hello unchanged
waiting for deployment to be available
deployment "hello" successfully rolled out
waiting for endpoints to be populated
endpoints/hello condition met
route summary
hello   hello-test-ingress.apps.btofel-netedg-251008.devcluster.openshift.com   True
service selector
{"app":"hello"}
endpoints detail
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2025-10-08T17:23:00Z"
  creationTimestamp: "2025-10-08T17:22:54Z"
  name: hello
  namespace: test-ingress
  resourceVersion: "78062"
  uid: 86f4b84e-fab5-4eee-b2ac-22d65f130a45
subsets:
- addresses:
  - ip: 10.131.0.18
    nodeName: ip-10-0-19-194.ec2.internal
    targetRef:
      kind: Pod
      name: hello-d77cf57c9-2twxx
      namespace: test-ingress
      uid: 74d90fbe-c45a-4d11-b287-ecfed1e51f4d
  ports:
  - name: http
    port: 8080
    protocol: TCP
Reminder: include --scenario=2 on follow-up commands to stay in the same scenario
gen-mcp first-netedge $ examples/netedge-tools/netedge-break-repair.sh --scenario=2 --status
scenario 2: Route host without DNS
route summary
hello   hello-test-ingress.apps.btofel-netedg-251008.devcluster.openshift.com   True
service selector
{"app":"hello"}
endpoints detail
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2025-10-08T17:23:00Z"
  creationTimestamp: "2025-10-08T17:22:54Z"
  name: hello
  namespace: test-ingress
  resourceVersion: "78062"
  uid: 86f4b84e-fab5-4eee-b2ac-22d65f130a45
subsets:
- addresses:
  - ip: 10.131.0.18
    nodeName: ip-10-0-19-194.ec2.internal
    targetRef:
      kind: Pod
      name: hello-d77cf57c9-2twxx
      namespace: test-ingress
      uid: 74d90fbe-c45a-4d11-b287-ecfed1e51f4d
  ports:
  - name: http
    port: 8080
    protocol: TCP
Reminder: include --scenario=2 on follow-up commands to stay in the same scenario
gen-mcp first-netedge $ examples/netedge-tools/netedge-break-repair.sh --scenario=2 --curl
scenario 2: Route host without DNS
curling http://hello-test-ingress.apps.btofel-netedg-251008.devcluster.openshift.com
Hello OpenShift!
Reminder: include --scenario=2 on follow-up commands to stay in the same scenario
gen-mcp first-netedge $ examples/netedge-tools/netedge-break-repair.sh --scenario=2 --break
scenario 2: Route host without DNS
patching route host to trigger NXDOMAIN, original host: hello-test-ingress.apps.btofel-netedg-251008.devcluster.openshift.com
route.route.openshift.io/hello patched
route summary
hello   does-not-exist.netedge.test   True
service selector
{"app":"hello"}
endpoints detail
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2025-10-08T17:23:00Z"
  creationTimestamp: "2025-10-08T17:22:54Z"
  name: hello
  namespace: test-ingress
  resourceVersion: "78062"
  uid: 86f4b84e-fab5-4eee-b2ac-22d65f130a45
subsets:
- addresses:
  - ip: 10.131.0.18
    nodeName: ip-10-0-19-194.ec2.internal
    targetRef:
      kind: Pod
      name: hello-d77cf57c9-2twxx
      namespace: test-ingress
      uid: 74d90fbe-c45a-4d11-b287-ecfed1e51f4d
  ports:
  - name: http
    port: 8080
    protocol: TCP
note: external DNS lookups for does-not-exist.netedge.test should now fail with NXDOMAIN
Reminder: include --scenario=2 on follow-up commands to stay in the same scenario
gen-mcp first-netedge $ examples/netedge-tools/netedge-break-repair.sh --scenario=2 --curl
scenario 2: Route host without DNS
curling http://does-not-exist.netedge.test
curl: (6) Could not resolve host: does-not-exist.netedge.test
curl failed or route not resolvable from here
gen-mcp first-netedge $ examples/netedge-tools/netedge-break-repair.sh --scenario=2 --status
scenario 2: Route host without DNS
route summary
hello   does-not-exist.netedge.test   True
service selector
{"app":"hello"}
endpoints detail
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2025-10-08T17:23:00Z"
  creationTimestamp: "2025-10-08T17:22:54Z"
  name: hello
  namespace: test-ingress
  resourceVersion: "78062"
  uid: 86f4b84e-fab5-4eee-b2ac-22d65f130a45
subsets:
- addresses:
  - ip: 10.131.0.18
    nodeName: ip-10-0-19-194.ec2.internal
    targetRef:
      kind: Pod
      name: hello-d77cf57c9-2twxx
      namespace: test-ingress
      uid: 74d90fbe-c45a-4d11-b287-ecfed1e51f4d
  ports:
  - name: http
    port: 8080
    protocol: TCP
Reminder: include --scenario=2 on follow-up commands to stay in the same scenario
gen-mcp first-netedge $ oc patch route hello -n test-ingress --type=json -p '[{"op":"remove","path":"/spec/host"}]'
route.route.openshift.io/hello patched
gen-mcp first-netedge $ examples/netedge-tools/netedge-break-repair.sh --scenario=2 --curl
scenario 2: Route host without DNS
curling http://does-not-exist.netedge.test
curl: (6) Could not resolve host: does-not-exist.netedge.test
curl failed or route not resolvable from here
gen-mcp first-netedge $ examples/netedge-tools/netedge-break-repair.sh --scenario=2 --curl
scenario 2: Route host without DNS
curling http://does-not-exist.netedge.test
curl: (6) Could not resolve host: does-not-exist.netedge.test
curl failed or route not resolvable from here